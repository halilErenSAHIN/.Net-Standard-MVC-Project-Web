@model ToolBox.Pagination<Core.Concrates.DTOs.Data.ArticleListDTO>

@{
    ViewBag.Title = "Articles";
}

<h2>Articles</h2>
<div class="card mb-3 row-cols-lg-3 g-4">
    @foreach (var item in Model.PagedData)
    {
        <div class="col">
            <img src="@item.FeatureMedia " class="card-img-top" alt="@item.Title">
            <div class="card-body">
                <p class="text-muted">@item.ArticleType.ToString()</p>
                <h5 class="card-title">@item.Title</h5>
                <p class="card-text">@item.SubTitle</p>
                <p class="card-text"><small class="text-muted">@item.PublishDate.ToString("dd/MM/yyyy HH:mm:ss")</small></p>
            </div>
        </div>

    }



</div>

<<div class="row mb-5">
    <nav aria-label="...">
        <ul class="pagination justify-content-center">
            @if (Model.Prev)
            {
                <li class="page-item">
                    @Html.ActionLink("Previous", "index", "news", new { @page = Model.Page - 1, @per_page = Model.PerPage }, new { @class = "page-link" })
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Previous</span>
                </li>
            }
            @for (int i = Model.Start; i <= Model.End; i++)
            {
                if (Model.Page == i)
                {
                    <li class="page-item active" aria-current="page">
                        <span class="page-link">@i</span>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        @Html.ActionLink(i.ToString(), "index", "news", new { @page = i, @per_page = Model.PerPage }, new { @class = "page-link" })
                    </li>
                }
            }
            @if (Model.Next)
            {
                <li class="page-item">
                    @Html.ActionLink("Next", "index", "news", new { @page = Model.Page + 1, @per_page = Model.PerPage }, new { @class = "page-link" })
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Next</span>
                </li>
            }
        </ul>
    </nav>
</div>
